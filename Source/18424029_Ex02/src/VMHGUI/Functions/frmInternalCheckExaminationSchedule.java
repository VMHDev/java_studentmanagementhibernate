/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package VMHGUI.Functions;

import VMHBUS.*;
import VMHDAO.*;
import VMHPOJO.*;
import java.io.IOException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author VMHIT
 */
public class frmInternalCheckExaminationSchedule extends javax.swing.JInternalFrame {

    /**
     * Creates new form frmInternalClass
     */
    public frmInternalCheckExaminationSchedule() {
        initComponents();
        lblInfoTranscript.setHorizontalAlignment(SwingConstants.CENTER);
        lblInfoTranscript.setVerticalAlignment(SwingConstants.CENTER);

        LoadDefault();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlButton = new javax.swing.JPanel();
        btnExit = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        pnlTable = new javax.swing.JScrollPane();
        tblCheckExaminationSchedule = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        lblInfoTranscript = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtManage = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        cboSubject = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        cboClass = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        dtpDateFrom = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();
        dtpDateTo = new com.toedter.calendar.JDateChooser();

        setClosable(true);
        setTitle("Lịch phúc khảo");

        btnExit.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnExit.setText("Thoát");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnDelete.setText("Xóa");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnSave.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnSave.setText("Lưu");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlButtonLayout = new javax.swing.GroupLayout(pnlButton);
        pnlButton.setLayout(pnlButtonLayout);
        pnlButtonLayout.setHorizontalGroup(
            pnlButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlButtonLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSave)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDelete)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnExit)
                .addGap(20, 20, 20))
        );

        pnlButtonLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnDelete, btnExit, btnSave});

        pnlButtonLayout.setVerticalGroup(
            pnlButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlButtonLayout.createSequentialGroup()
                .addGroup(pnlButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(btnSave)
                    .addComponent(btnDelete)
                    .addComponent(btnExit))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlButtonLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnDelete, btnExit, btnSave});

        tblCheckExaminationSchedule.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblCheckExaminationSchedule.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCheckExaminationScheduleMouseClicked(evt);
            }
        });
        pnlTable.setViewportView(tblCheckExaminationSchedule);

        lblInfoTranscript.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lblInfoTranscript.setText("Thông tin lịch phúc khảo");

        jLabel5.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel5.setText("Giáo vụ:");

        txtManage.setEditable(false);
        txtManage.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel1.setText("Môn học:");

        jLabel4.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel4.setText("Lớp:");

        jLabel6.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel6.setText("Từ ngày:");

        dtpDateFrom.setDateFormatString("dd/MM/yyyy");
        dtpDateFrom.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel3.setText("Đến ngày:");

        dtpDateTo.setDateFormatString("dd/MM/yyyy");
        dtpDateTo.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lblInfoTranscript, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtManage, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE)
                            .addComponent(cboSubject, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(dtpDateFrom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cboClass, 0, 197, Short.MAX_VALUE)
                            .addComponent(dtpDateTo, javax.swing.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE))
                        .addGap(20, 20, 20))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblInfoTranscript)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtManage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cboSubject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(cboClass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dtpDateTo, javax.swing.GroupLayout.DEFAULT_SIZE, 21, Short.MAX_VALUE)
                            .addComponent(dtpDateFrom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel6))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlTable)
            .addComponent(pnlButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlTable, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void LoadDefault() {
        try {
            txtManage.setText(clsParameterSys.getUserName());
            LoadDataToTable();
            LoadDataToCombobox();
        } catch (IOException ex) {
            Logger.getLogger(frmInternalCheckExaminationSchedule.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void LoadDataToCombobox() {
        List<Classdto> arrlstClass = ClassDAO.GetAllClass();
        Classdto[] arrClass = arrlstClass.toArray(new Classdto[arrlstClass.size()]);
        DefaultComboBoxModel dmdCboClass = new DefaultComboBoxModel(arrClass);
        cboClass.setModel(dmdCboClass);

        List<Subjectdto> arrlstSubject = SubjectDAO.GetAllSubject();
        Subjectdto[] arrSubject = arrlstSubject.toArray(new Subjectdto[arrlstClass.size()]);
        DefaultComboBoxModel dmdCboSubject = new DefaultComboBoxModel(arrSubject);
        cboSubject.setModel(dmdCboSubject);
    }

    public void LoadDataToTable() throws IOException {
        String[] colNames = new String[]{"Môn học", "Lớp", "Từ ngày", "Đến ngày", "User Name", "ID Subject", "ID Class"};
        DefaultTableModel modelObj = new DefaultTableModel(null, colNames);
        List<Checkexaminationscheduledto> lstObj = CheckExaminationScheduleDAO.GetAllCheckExaminationSchedule();

        DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
        for (int i = 0; i < lstObj.size(); i++) {
            @SuppressWarnings("UseOfObsoleteCollectionType")
            Vector<String> vecDataLine = new Vector<String>();
            vecDataLine.add(0, lstObj.get(i).getId().getSubjectId().getSubjectName());
            vecDataLine.add(1, lstObj.get(i).getId().getClassId().getClassCode());
            String strDateFrom = dateFormat.format(lstObj.get(i).getFormDate());
            vecDataLine.add(2, strDateFrom);
            String strDateTo = dateFormat.format(lstObj.get(i).getToDate());
            vecDataLine.add(3, strDateTo);
            vecDataLine.add(4, lstObj.get(i).getId().getUserName().getUserName());
            vecDataLine.add(5, Integer.toString(lstObj.get(i).getId().getSubjectId().getId()));
            vecDataLine.add(6, Integer.toString(lstObj.get(i).getId().getClassId().getId()));
            modelObj.addRow(vecDataLine);
        }
        tblCheckExaminationSchedule.setModel(modelObj);
    }

    @SuppressWarnings("null")
    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        Boolean rs = false;

        Userdto modelUser = UserDAO.GetUserWithUserName(txtManage.getText());
        Classdto modelClass = (Classdto) cboClass.getSelectedItem();
        Subjectdto modelSubject = (Subjectdto) cboSubject.getSelectedItem();
        CheckexaminationscheduledtoId objId = new CheckexaminationscheduledtoId(modelUser, modelClass, modelSubject);

        Date dateFrom = dtpDateFrom.getDate();
        Date dateTo = dtpDateTo.getDate();
        if (dateFrom.compareTo(dateTo) != -1) {
            JOptionPane.showMessageDialog(null, "Vui lòng nhập từ ngày nhỏ hơn đến ngày", "Cảnh báo", JOptionPane.WARNING_MESSAGE);
            return;
        }

        Checkexaminationscheduledto objCheck = CheckExaminationScheduleDAO.GetCheckexaminationscheduleWithID(objId);
        if (objCheck == null) // Thêm
        {
            Checkexaminationscheduledto objIns = new Checkexaminationscheduledto(objId, dateFrom, dateTo);
            rs = CheckExaminationScheduleDAO.AddCheckexaminationschedule(objIns);
            if (rs == true) {
                JOptionPane.showMessageDialog(null, "Thêm thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                LoadDefault();
            } else {
                JOptionPane.showMessageDialog(null, "Thêm thất bại", "Lỗi", JOptionPane.ERROR_MESSAGE);
            }
        } else // Cập nhật
        {
            objCheck.setFormDate(dateFrom);
            objCheck.setToDate(dateTo);
            objCheck.setUpdatedDate(new Date());
            rs = CheckExaminationScheduleDAO.UpdateCheckexaminationschedule(objCheck);

            if (rs == true) {
                JOptionPane.showMessageDialog(null, "Cập nhật thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                LoadDefault();
            } else {
                JOptionPane.showMessageDialog(null, "Cập nhật thất bại", "Lỗi", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int row = tblCheckExaminationSchedule.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn dữ liệu cần xóa", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        int dialogResult = JOptionPane.showConfirmDialog(null, "Bạn chắc chắn muốn xóa?", "Xác nhận", JOptionPane.YES_NO_OPTION);
        if (dialogResult == JOptionPane.NO_OPTION || dialogResult == JOptionPane.CLOSED_OPTION) {
            return;
        }
        Userdto modelUser = UserDAO.GetUserWithUserName(txtManage.getText());
        Classdto modelClass = (Classdto) cboClass.getSelectedItem();
        Subjectdto modelSubject = (Subjectdto) cboSubject.getSelectedItem();
        CheckexaminationscheduledtoId objId = new CheckexaminationscheduledtoId(modelUser, modelClass, modelSubject);
        Checkexaminationscheduledto objCheck = CheckExaminationScheduleDAO.GetCheckexaminationscheduleWithID(objId);
        if (objCheck != null) {
            objCheck.setIsActive(false);
            objCheck.setUpdatedDate(new Date());
            Boolean rs = CheckExaminationScheduleDAO.UpdateCheckexaminationschedule(objCheck);
            if (rs) {
                JOptionPane.showMessageDialog(null, "Xóa thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                LoadDefault();
            } else {
                JOptionPane.showMessageDialog(null, "Xóa thất bại", "Lỗi", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Không có dữ liệu để xóa", "Cảnh báo", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnExitActionPerformed

    private void tblCheckExaminationScheduleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCheckExaminationScheduleMouseClicked
        try {
            JTable sourceTable = (JTable) evt.getSource();
            int row = sourceTable.rowAtPoint(evt.getPoint());

            String sDateFrom = sourceTable.getModel().getValueAt(row, 2).toString();
            Date dateFrom = new SimpleDateFormat("dd/MM/yyyy").parse(sDateFrom);
            dtpDateFrom.setDate(dateFrom);

            String sDateTo = sourceTable.getModel().getValueAt(row, 3).toString();
            Date dateTo = new SimpleDateFormat("dd/MM/yyyy").parse(sDateTo);
            dtpDateTo.setDate(dateTo);

            txtManage.setText(sourceTable.getModel().getValueAt(row, 4).toString());

            Integer subjectID = Integer.parseInt(sourceTable.getModel().getValueAt(row, 5).toString());
            clsUtilityCombobox.setSelectSubjectWithID(cboSubject, subjectID);
            Integer classID = Integer.parseInt(sourceTable.getModel().getValueAt(row, 6).toString());
            clsUtilityCombobox.setSelectClassWithID(cboClass, classID);
        } catch (ParseException ex) {
            Logger.getLogger(frmInternalCheckExaminationSchedule.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tblCheckExaminationScheduleMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox<String> cboClass;
    private javax.swing.JComboBox<String> cboSubject;
    private com.toedter.calendar.JDateChooser dtpDateFrom;
    private com.toedter.calendar.JDateChooser dtpDateTo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lblInfoTranscript;
    private javax.swing.JPanel pnlButton;
    private javax.swing.JScrollPane pnlTable;
    private javax.swing.JTable tblCheckExaminationSchedule;
    private javax.swing.JTextField txtManage;
    // End of variables declaration//GEN-END:variables
}
