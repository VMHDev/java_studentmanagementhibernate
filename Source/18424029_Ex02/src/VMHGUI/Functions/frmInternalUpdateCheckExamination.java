/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package VMHGUI.Functions;

import VMHBUS.*;
import VMHDAO.*;
import VMHDTO.*;
import VMHPOJO.*;
import java.io.IOException;
import java.util.Date;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author VMHIT
 */
public class frmInternalUpdateCheckExamination extends javax.swing.JInternalFrame {

    /**
     * Creates new form frmInternalClass
     */
    public frmInternalUpdateCheckExamination() {
        initComponents();
        lblInfoCheckExamination.setHorizontalAlignment(SwingConstants.CENTER);
        lblInfoCheckExamination.setVerticalAlignment(SwingConstants.CENTER);

        LoadDefault();
        HiddenControl();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblStatusCheck = new javax.swing.JPanel();
        btnExit = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        btnSearch = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnCheck = new javax.swing.JButton();
        pnlTable = new javax.swing.JScrollPane();
        tblCheck = new javax.swing.JTable();
        pnlInfo = new javax.swing.JPanel();
        lblInfoCheckExamination = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        cboSubject = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtScoresWish = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cboClass = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        txtScoresAfter = new javax.swing.JTextField();
        txtScoresBefore = new javax.swing.JTextField();
        lblScoresBefore = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtStudentName = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtReason = new javax.swing.JTextArea();
        cboScoresType = new javax.swing.JComboBox<>();
        txtStudentCode = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtStatus = new javax.swing.JTextField();

        setClosable(true);
        setTitle("Phúc khảo");

        btnExit.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnExit.setText("Thoát");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(204, 0, 0));

        btnSearch.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnSearch.setText("Tìm kiếm");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnUpdate.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnUpdate.setText("Cập nhật");
        btnUpdate.setMaximumSize(new java.awt.Dimension(73, 23));
        btnUpdate.setMinimumSize(new java.awt.Dimension(73, 23));
        btnUpdate.setPreferredSize(new java.awt.Dimension(73, 23));
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnCheck.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnCheck.setText("Xem xét");
        btnCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout lblStatusCheckLayout = new javax.swing.GroupLayout(lblStatusCheck);
        lblStatusCheck.setLayout(lblStatusCheckLayout);
        lblStatusCheckLayout.setHorizontalGroup(
            lblStatusCheckLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lblStatusCheckLayout.createSequentialGroup()
                .addGap(365, 365, 365)
                .addComponent(btnSearch)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCheck)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnExit)
                .addGap(30, 30, 30)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lblStatusCheckLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnCheck, btnExit, btnSearch, btnUpdate});

        lblStatusCheckLayout.setVerticalGroup(
            lblStatusCheckLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lblStatusCheckLayout.createSequentialGroup()
                .addGroup(lblStatusCheckLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(btnExit)
                    .addComponent(jLabel10)
                    .addComponent(btnSearch)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCheck))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tblCheck.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblCheck.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCheckMouseClicked(evt);
            }
        });
        pnlTable.setViewportView(tblCheck);

        lblInfoCheckExamination.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lblInfoCheckExamination.setText("Cập nhật phúc khảo");

        jLabel1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel1.setText("Môn học:");

        jLabel2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel2.setLabelFor(txtScoresWish);
        jLabel2.setText("MSSV:");

        jLabel5.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel5.setLabelFor(txtScoresWish);
        jLabel5.setText("Cột phúc khảo:");

        txtScoresWish.setEditable(false);
        txtScoresWish.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtScoresWish.setEnabled(false);

        jLabel6.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel6.setLabelFor(txtScoresWish);
        jLabel6.setText("Điểm mong muốn:");

        jLabel4.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel4.setText("Lớp:");

        jLabel7.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel7.setLabelFor(txtScoresWish);
        jLabel7.setText("Điểm sau:");

        txtScoresAfter.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        txtScoresBefore.setEditable(false);
        txtScoresBefore.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtScoresBefore.setEnabled(false);

        lblScoresBefore.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        lblScoresBefore.setLabelFor(txtScoresWish);
        lblScoresBefore.setText("Điểm trước:");

        jLabel8.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel8.setText("Tên:");

        txtStudentName.setEditable(false);
        txtStudentName.setEnabled(false);

        jLabel9.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel9.setText("Lý do:");

        txtReason.setEditable(false);
        txtReason.setColumns(20);
        txtReason.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtReason.setRows(5);
        txtReason.setEnabled(false);
        jScrollPane1.setViewportView(txtReason);

        cboScoresType.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        cboScoresType.setEnabled(false);

        txtStudentCode.setEditable(false);
        txtStudentCode.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtStudentCode.setEnabled(false);

        jLabel11.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel11.setText("Tình trạng:");

        txtStatus.setEditable(false);
        txtStatus.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtStatus.setForeground(new java.awt.Color(153, 51, 0));
        txtStatus.setEnabled(false);

        javax.swing.GroupLayout pnlInfoLayout = new javax.swing.GroupLayout(pnlInfo);
        pnlInfo.setLayout(pnlInfoLayout);
        pnlInfoLayout.setHorizontalGroup(
            pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlInfoLayout.createSequentialGroup()
                        .addGroup(pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel9)
                            .addComponent(jLabel5)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlInfoLayout.createSequentialGroup()
                                .addGroup(pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cboSubject, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtScoresWish)
                                    .addComponent(cboScoresType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtStudentCode))
                                .addGap(18, 18, 18)
                                .addGroup(pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4)
                                    .addComponent(lblScoresBefore)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cboClass, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtScoresAfter)
                                    .addComponent(txtScoresBefore)
                                    .addComponent(txtStudentName)))
                            .addComponent(jScrollPane1)
                            .addComponent(txtStatus))
                        .addGap(25, 25, 25))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlInfoLayout.createSequentialGroup()
                        .addComponent(lblInfoCheckExamination, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        pnlInfoLayout.setVerticalGroup(
            pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblInfoCheckExamination)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cboSubject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(cboClass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel8)
                    .addComponent(txtStudentName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtStudentCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtScoresBefore, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblScoresBefore)
                    .addComponent(cboScoresType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtScoresWish, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(txtScoresAfter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txtStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlTable)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 10, Short.MAX_VALUE)
                .addComponent(lblStatusCheck, javax.swing.GroupLayout.PREFERRED_SIZE, 747, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(pnlInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblStatusCheck, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlTable, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public final void HiddenControl() {
        // Ẩn text box điểm trước sau này xử lý sau
        txtScoresBefore.setVisible(false);
        txtScoresBefore.revalidate();
        txtScoresBefore.repaint();
        lblScoresBefore.setVisible(false);
        lblScoresBefore.revalidate();
        lblScoresBefore.repaint();
        // Ẩn cột
        tblCheck.getColumn("ID Sinh viên").setPreferredWidth(0);
        tblCheck.getColumn("ID Sinh viên").setMinWidth(0);
        tblCheck.getColumn("ID Sinh viên").setWidth(0);
        tblCheck.getColumn("ID Sinh viên").setMaxWidth(0);
        tblCheck.getColumn("ID Môn học").setPreferredWidth(0);
        tblCheck.getColumn("ID Môn học").setMinWidth(0);
        tblCheck.getColumn("ID Môn học").setWidth(0);
        tblCheck.getColumn("ID Môn học").setMaxWidth(0);
        tblCheck.getColumn("ID Lớp").setPreferredWidth(0);
        tblCheck.getColumn("ID Lớp").setMinWidth(0);
        tblCheck.getColumn("ID Lớp").setWidth(0);
        tblCheck.getColumn("ID Lớp").setMaxWidth(0);
    }

    public final void LoadDefault() {
        try {
            LoadDataToTable(true);
            LoadDataToCombobox();
        } catch (IOException ex) {
            Logger.getLogger(frmInternalUpdateCheckExamination.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void LoadDataToCombobox() {
        List<Classdto> arrlstClass = ClassDAO.GetAllClass();
        arrlstClass.add(0, null);
        Classdto[] arrClass = arrlstClass.toArray(new Classdto[arrlstClass.size()]);
        DefaultComboBoxModel dmdCboClass = new DefaultComboBoxModel(arrClass);
        cboClass.setModel(dmdCboClass);

        List<Subjectdto> arrlstSubject = SubjectDAO.GetAllSubject();
        arrlstSubject.add(0, null);
        Subjectdto[] arrSubject = arrlstSubject.toArray(new Subjectdto[arrlstClass.size()]);
        DefaultComboBoxModel dmdCboSubject = new DefaultComboBoxModel(arrSubject);
        cboSubject.setModel(dmdCboSubject);

        //Ref: https://stackoverflow.com/questions/29461321/conversion-of-string-to-jcombobox
        cboScoresType.addItem(new KeyValue("M", "Giữa kỳ"));
        cboScoresType.addItem(new KeyValue("E", "Cuối kỳ"));
        cboScoresType.addItem(new KeyValue("O", "Khác"));
        cboScoresType.addItem(new KeyValue("S", "Tổng"));
    }

    public void LoadDataToTable(Boolean _IsLoad) throws IOException {
        String[] colNames = new String[]{"Sinh viên", "Môn học", "Lớp", "Cột phúc khảo", "Điểm mong muốn", "Điểm sau", "Lý do", "Tình trạng", "ID Sinh viên", "ID Môn học", "ID Lớp"};
        DefaultTableModel modelObj = new DefaultTableModel(null, colNames);

        Classdto modelClass = (Classdto) cboClass.getSelectedItem();
        Subjectdto modelSubject = (Subjectdto) cboSubject.getSelectedItem();
        if (_IsLoad) {
            modelClass = null;
            modelSubject = null;
        }
        List<Checkexaminationdto> lstObj = CheckExaminationDAO.GetCheckExaminationNotComplete(modelClass, modelSubject, 'C');

        if (lstObj.size() <= 0 && !_IsLoad) {
            JOptionPane.showMessageDialog(null, "Không tìm thấy thông tin", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
        }

        for (int i = 0; i < lstObj.size(); i++) {
            @SuppressWarnings("UseOfObsoleteCollectionType")
            Vector<String> vecDataLine = new Vector<String>();
            vecDataLine.add(0, lstObj.get(i).getId().getStudentId().getStudentCode());
            vecDataLine.add(1, lstObj.get(i).getId().getSubjectId().getSubjectName());
            vecDataLine.add(2, lstObj.get(i).getId().getClassId().getClassCode());
            String sType = lstObj.get(i).getScoresType();
            switch (sType) {
                case "M":
                    vecDataLine.add(3, "Giữa kỳ");
                    break;
                case "E":
                    vecDataLine.add(3, "Cuối kỳ");
                    break;
                case "O":
                    vecDataLine.add(3, "Khác");
                    break;
                case "S":
                    vecDataLine.add(3, "Tổng");
                    break;
                default:
                    vecDataLine.add(3, "");
                    break;
            }
            vecDataLine.add(4, Float.toString(lstObj.get(i).getScoresWish()));
            vecDataLine.add(5, Float.toString(lstObj.get(i).getScoresCheck()));
            vecDataLine.add(6, lstObj.get(i).getReason());
            char sStstus = lstObj.get(i).getStatusCheck();
            switch (sStstus) {
                case 'C':
                    vecDataLine.add(7, "Đã cập nhật");
                    break;
                case 'N':
                    vecDataLine.add(7, "Chưa cập nhật");
                    break;
                default:
                    vecDataLine.add(7, "Chưa xem");
                    break;
            }
            vecDataLine.add(8, Integer.toString(lstObj.get(i).getId().getStudentId().getId()));
            vecDataLine.add(9, Integer.toString(lstObj.get(i).getId().getSubjectId().getId()));
            vecDataLine.add(10, Integer.toString(lstObj.get(i).getId().getClassId().getId()));
            modelObj.addRow(vecDataLine);
        }
        tblCheck.setModel(modelObj);
        HiddenControl();
    }

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnExitActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        try {
            LoadDataToTable(false);
        } catch (IOException ex) {
            Logger.getLogger(frmInternalUpdateCheckExamination.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckActionPerformed
        Boolean rs = false;
        // Lấy phúc khảo của sinh viên
        Classdto modelClass = (Classdto) cboClass.getSelectedItem();
        Subjectdto modelSubject = (Subjectdto) cboSubject.getSelectedItem();
        Checkexaminationscheduledto objCheckSchedule = CheckExaminationScheduleDAO.GetCheckexaminationscheduleWithClassSubject(modelClass, modelSubject);
        Studentdto objStudent = StudentDAO.GetStudentWithCode(txtStudentCode.getText());
        if (objCheckSchedule == null || objStudent == null || modelClass == null || modelSubject == null) {
            return;
        }
        CheckexaminationdtoId objId = new CheckexaminationdtoId(objStudent, objCheckSchedule);
        Checkexaminationdto objCheck = CheckExaminationDAO.GetCheckexaminationWithID(objId);

        if (objCheck == null) {
            return;
        }
        objCheck.setStatusCheck('N');
        objCheck.setUpdatedDate(new Date());
        rs = CheckExaminationDAO.UpdateCheckexamination(objCheck);

        if (rs == true) {
            JOptionPane.showMessageDialog(null, "Cập nhật thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            LoadDefault();
        } else {
            JOptionPane.showMessageDialog(null, "Cập nhật thất bại", "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnCheckActionPerformed

    @SuppressWarnings("null")
    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        Boolean rs = false;
        // Lấy phúc khảo của sinh viên
        Classdto modelClass = (Classdto) cboClass.getSelectedItem();
        Subjectdto modelSubject = (Subjectdto) cboSubject.getSelectedItem();
        Checkexaminationscheduledto objCheckSchedule = CheckExaminationScheduleDAO.GetCheckexaminationscheduleWithClassSubject(modelClass, modelSubject);
        Studentdto objStudent = StudentDAO.GetStudentWithCode(txtStudentCode.getText());
        if (objCheckSchedule == null || objStudent == null || modelClass == null || modelSubject == null) {
            return;
        }
        CheckexaminationdtoId objId = new CheckexaminationdtoId(objStudent, objCheckSchedule);
        Checkexaminationdto objCheck = CheckExaminationDAO.GetCheckexaminationWithID(objId);

        if (objCheck == null) {
            return;
        }

        if (txtScoresAfter.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Vui lòng nhập điểm sau (khi phúc khảo)", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }
        Float fScoresAfter = Float.parseFloat(txtScoresAfter.getText());
        objCheck.setScoresCheck(fScoresAfter);
        objCheck.setStatusCheck('C');
        objCheck.setUpdatedDate(new Date());
        rs = CheckExaminationDAO.UpdateCheckexamination(objCheck);

        if (rs == true) {
            Integer rsTrns = 0;
            TranscriptdtoId objTranscriptId = new TranscriptdtoId(objStudent, modelClass, modelSubject);
            Transcriptdto objTranscript = TranscriptDAO.GetTranscriptWithID(objTranscriptId);
            if (objTranscript == null) {
                JOptionPane.showMessageDialog(null, "Cập nhật thất bại", "Lỗi", JOptionPane.ERROR_MESSAGE);
            }
            if (objCheck.getScoresType().equals("M")) {
                objTranscript.setScoresMid(fScoresAfter);
            } else if (objCheck.getScoresType().equals("E")) {
                objTranscript.setScoresEnd(fScoresAfter);
            } else if (objCheck.getScoresType().equals("O")) {
                objTranscript.setScoresOther(fScoresAfter);
            } else if (objCheck.getScoresType().equals("S")) {
                objTranscript.setScoresSum(fScoresAfter);
            } else {
                objTranscript.setScoresSum(0F);
            }
            objTranscript.setUpdatedDate(new Date());
            rsTrns = TranscriptDAO.UpdateScoresTranscript(objTranscript);
            if (rsTrns == 1) {
                JOptionPane.showMessageDialog(null, "Cập nhật thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                LoadDefault();
            } else {
                JOptionPane.showMessageDialog(null, "Cập nhật thất bại", "Lỗi", JOptionPane.ERROR_MESSAGE);
            }

        } else {
            JOptionPane.showMessageDialog(null, "Cập nhật thất bại", "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void tblCheckMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCheckMouseClicked
        JTable sourceTable = (JTable) evt.getSource();
        int row = sourceTable.rowAtPoint(evt.getPoint());
        txtStudentCode.setText(sourceTable.getModel().getValueAt(row, 0).toString());
        Studentdto objStudent = StudentDAO.GetStudentWithCode(sourceTable.getModel().getValueAt(row, 0).toString());
        txtStudentName.setText(objStudent.getStudentName());

        String sType = sourceTable.getModel().getValueAt(row, 3).toString();
        clsUtilityCombobox.setSelectKeyValueWithValue(cboScoresType, sType);

        txtScoresWish.setText(sourceTable.getModel().getValueAt(row, 4).toString());
        txtScoresBefore.setText("");
        txtScoresAfter.setText(sourceTable.getModel().getValueAt(row, 5).toString());
        txtReason.setText(sourceTable.getModel().getValueAt(row, 6).toString());
        txtStatus.setText(sourceTable.getModel().getValueAt(row, 7).toString());
        Integer subjectID = Integer.parseInt(sourceTable.getModel().getValueAt(row, 9).toString());
        clsUtilityCombobox.setSelectSubjectWithID(cboSubject, subjectID);
        Integer classID = Integer.parseInt(sourceTable.getModel().getValueAt(row, 10).toString());
        clsUtilityCombobox.setSelectClassWithID(cboClass, classID);
    }//GEN-LAST:event_tblCheckMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCheck;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cboClass;
    private javax.swing.JComboBox<Object> cboScoresType;
    private javax.swing.JComboBox<String> cboSubject;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblInfoCheckExamination;
    private javax.swing.JLabel lblScoresBefore;
    private javax.swing.JPanel lblStatusCheck;
    private javax.swing.JPanel pnlInfo;
    private javax.swing.JScrollPane pnlTable;
    private javax.swing.JTable tblCheck;
    private javax.swing.JTextArea txtReason;
    private javax.swing.JTextField txtScoresAfter;
    private javax.swing.JTextField txtScoresBefore;
    private javax.swing.JTextField txtScoresWish;
    private javax.swing.JTextField txtStatus;
    private javax.swing.JTextField txtStudentCode;
    private javax.swing.JTextField txtStudentName;
    // End of variables declaration//GEN-END:variables
}
