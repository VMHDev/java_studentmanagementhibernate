/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package VMHGUI;

import VMHBUS.clsParameterSys;
import VMHGUI.Functions.frmInternalCheckExamination;
import VMHGUI.Functions.frmInternalCheckExaminationSchedule;
import VMHGUI.Functions.frmInternalUser;
import VMHGUI.Functions.frmInternalStudentClassSubject;
import VMHGUI.Functions.frmInternalSubject;
import VMHGUI.Functions.frmInternalStudentClass;
import VMHGUI.Functions.frmInternalClass;
import VMHGUI.Functions.frmInternalSchedule;
import VMHGUI.Functions.frmInternalTranscript;
import VMHGUI.Functions.frmInternalUpdateCheckExamination;
import VMHGUI.User.*;
import VMHGUI.Import.*;
import VMHGUI.Query.frmInternalQueryListCheckExamination;
import VMHGUI.Query.frmInternalQueryResultCheckExamination;
import VMHGUI.Query.frmInternalQuerySchedule;
import VMHGUI.Query.frmInternalQueryStudentClass;
import VMHGUI.Query.frmInternalQueryStudentClassSubject;
import VMHGUI.Query.frmInternalQueryStudentScores;
import VMHGUI.Query.frmInternalQueryTranscript;
import java.beans.PropertyVetoException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JInternalFrame;

/**
 *
 * @author VMHIT
 */
public class frmMain extends javax.swing.JFrame {

    /**
     * Creates new form frmMain
     */
    public frmMain() {
        initComponents();
        setLocationRelativeTo(null);

        // Ẩn menu import
        mnuBarImport.setVisible(clsParameterSys.getIsAdmin());

        // Ẩn item menu giáo vụ:
        mnuGroupStudent.setVisible(clsParameterSys.getIsAdmin());
        mnuItemClass.setVisible(clsParameterSys.getIsAdmin());
        mnuItemSubject.setVisible(clsParameterSys.getIsAdmin());
        mnuItemSchedule.setVisible(clsParameterSys.getIsAdmin());
        mnuItemTranscipt.setVisible(clsParameterSys.getIsAdmin());
        mnuItemUser.setVisible(clsParameterSys.getIsAdmin());
        mnuItemCheckExaminationSchedule.setVisible(clsParameterSys.getIsAdmin());
        mnuItemUpdateChecExamination.setVisible(clsParameterSys.getIsAdmin());
        mnuItemCheckExaminationSchedule.setVisible(clsParameterSys.getIsAdmin());
        mnuItemCheckExamination.setVisible(!clsParameterSys.getIsAdmin());
        mnuItemQueryResultCheckExamination.setVisible(!clsParameterSys.getIsAdmin());

        // Ẩn item menu tra cứu:
        mnuItemQueryTranscript.setVisible(clsParameterSys.getIsAdmin());
        mnuItemQueryListCheckExamination.setVisible(clsParameterSys.getIsAdmin());
        mnuItemQueryStudentScores.setVisible(!clsParameterSys.getIsAdmin());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        DesktopPaneMain = new javax.swing.JDesktopPane();
        MenuBarMain = new javax.swing.JMenuBar();
        mnuBarImport = new javax.swing.JMenu();
        mnuItemImportStudent = new javax.swing.JMenuItem();
        mnuItemImportSchedule = new javax.swing.JMenuItem();
        mnuItemImportTranscript = new javax.swing.JMenuItem();
        mnuBarFunctions = new javax.swing.JMenu();
        mnuGroupStudent = new javax.swing.JMenu();
        mnuItemStudentClass = new javax.swing.JMenuItem();
        mnuItemStudentSubject = new javax.swing.JMenuItem();
        mnuItemClass = new javax.swing.JMenuItem();
        mnuItemSubject = new javax.swing.JMenuItem();
        mnuItemSchedule = new javax.swing.JMenuItem();
        mnuItemTranscipt = new javax.swing.JMenuItem();
        mnuItemUser = new javax.swing.JMenuItem();
        mnuGroupCheckExamination = new javax.swing.JMenu();
        mnuItemCheckExaminationSchedule = new javax.swing.JMenuItem();
        mnuItemCheckExamination = new javax.swing.JMenuItem();
        mnuItemUpdateChecExamination = new javax.swing.JMenuItem();
        mnuBarQuery = new javax.swing.JMenu();
        mnuGroupQueryStudent = new javax.swing.JMenu();
        mnuItemQueryStudentClass = new javax.swing.JMenuItem();
        mnuItemQueryStudentClassSubject = new javax.swing.JMenuItem();
        mnuItemQuerySchedule = new javax.swing.JMenuItem();
        mnuGroupQueryScores = new javax.swing.JMenu();
        mnuItemQueryStudentScores = new javax.swing.JMenuItem();
        mnuItemQueryTranscript = new javax.swing.JMenuItem();
        mnuGroupQueryCheckExamination = new javax.swing.JMenu();
        mnuItemQueryResultCheckExamination = new javax.swing.JMenuItem();
        mnuItemQueryListCheckExamination = new javax.swing.JMenuItem();
        mnuBarUser = new javax.swing.JMenu();
        mnuItemResetPass = new javax.swing.JMenuItem();
        mnuItemLogout = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Quản lý giáo vụ");

        javax.swing.GroupLayout DesktopPaneMainLayout = new javax.swing.GroupLayout(DesktopPaneMain);
        DesktopPaneMain.setLayout(DesktopPaneMainLayout);
        DesktopPaneMainLayout.setHorizontalGroup(
            DesktopPaneMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1151, Short.MAX_VALUE)
        );
        DesktopPaneMainLayout.setVerticalGroup(
            DesktopPaneMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 616, Short.MAX_VALUE)
        );

        getContentPane().add(DesktopPaneMain, java.awt.BorderLayout.CENTER);

        mnuBarImport.setText("Nhập liệu");

        mnuItemImportStudent.setText("Sinh viên");
        mnuItemImportStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuItemImportStudentActionPerformed(evt);
            }
        });
        mnuBarImport.add(mnuItemImportStudent);

        mnuItemImportSchedule.setText("Thời khóa biểu");
        mnuItemImportSchedule.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuItemImportScheduleActionPerformed(evt);
            }
        });
        mnuBarImport.add(mnuItemImportSchedule);

        mnuItemImportTranscript.setText("Bảng điểm");
        mnuItemImportTranscript.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuItemImportTranscriptActionPerformed(evt);
            }
        });
        mnuBarImport.add(mnuItemImportTranscript);

        MenuBarMain.add(mnuBarImport);

        mnuBarFunctions.setText("Giáo vụ");

        mnuGroupStudent.setText("Sinh viên");

        mnuItemStudentClass.setText("Sinh viên theo lớp");
        mnuItemStudentClass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuItemStudentClassActionPerformed(evt);
            }
        });
        mnuGroupStudent.add(mnuItemStudentClass);

        mnuItemStudentSubject.setText("Sinh viên theo môn học");
        mnuItemStudentSubject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuItemStudentSubjectActionPerformed(evt);
            }
        });
        mnuGroupStudent.add(mnuItemStudentSubject);

        mnuBarFunctions.add(mnuGroupStudent);

        mnuItemClass.setText("Lớp");
        mnuItemClass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuItemClassActionPerformed(evt);
            }
        });
        mnuBarFunctions.add(mnuItemClass);

        mnuItemSubject.setText("Môn học");
        mnuItemSubject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuItemSubjectActionPerformed(evt);
            }
        });
        mnuBarFunctions.add(mnuItemSubject);

        mnuItemSchedule.setText("Thời khóa biểu");
        mnuItemSchedule.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuItemScheduleActionPerformed(evt);
            }
        });
        mnuBarFunctions.add(mnuItemSchedule);

        mnuItemTranscipt.setText("Bảng điểm");
        mnuItemTranscipt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuItemTransciptActionPerformed(evt);
            }
        });
        mnuBarFunctions.add(mnuItemTranscipt);

        mnuItemUser.setText("Người sử dụng");
        mnuItemUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuItemUserActionPerformed(evt);
            }
        });
        mnuBarFunctions.add(mnuItemUser);

        mnuGroupCheckExamination.setText("Phúc khảo");

        mnuItemCheckExaminationSchedule.setText("Lịch phúc khảo");
        mnuItemCheckExaminationSchedule.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuItemCheckExaminationScheduleActionPerformed(evt);
            }
        });
        mnuGroupCheckExamination.add(mnuItemCheckExaminationSchedule);

        mnuItemCheckExamination.setText("Phúc khảo");
        mnuItemCheckExamination.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuItemCheckExaminationActionPerformed(evt);
            }
        });
        mnuGroupCheckExamination.add(mnuItemCheckExamination);

        mnuItemUpdateChecExamination.setText("Cập nhật phúc khảo");
        mnuItemUpdateChecExamination.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuItemUpdateChecExaminationActionPerformed(evt);
            }
        });
        mnuGroupCheckExamination.add(mnuItemUpdateChecExamination);

        mnuBarFunctions.add(mnuGroupCheckExamination);

        MenuBarMain.add(mnuBarFunctions);

        mnuBarQuery.setText("Tra cứu");

        mnuGroupQueryStudent.setText("Danh sách sinh viên");

        mnuItemQueryStudentClass.setText("Lớp");
        mnuItemQueryStudentClass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuItemQueryStudentClassActionPerformed(evt);
            }
        });
        mnuGroupQueryStudent.add(mnuItemQueryStudentClass);

        mnuItemQueryStudentClassSubject.setText("Lớp - Môn học");
        mnuItemQueryStudentClassSubject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuItemQueryStudentClassSubjectActionPerformed(evt);
            }
        });
        mnuGroupQueryStudent.add(mnuItemQueryStudentClassSubject);

        mnuBarQuery.add(mnuGroupQueryStudent);

        mnuItemQuerySchedule.setText("Thời khóa biểu");
        mnuItemQuerySchedule.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuItemQueryScheduleActionPerformed(evt);
            }
        });
        mnuBarQuery.add(mnuItemQuerySchedule);

        mnuGroupQueryScores.setText("Điểm");

        mnuItemQueryStudentScores.setText("Sinh viên");
        mnuItemQueryStudentScores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuItemQueryStudentScoresActionPerformed(evt);
            }
        });
        mnuGroupQueryScores.add(mnuItemQueryStudentScores);

        mnuItemQueryTranscript.setText("Lớp - Môn học");
        mnuItemQueryTranscript.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuItemQueryTranscriptActionPerformed(evt);
            }
        });
        mnuGroupQueryScores.add(mnuItemQueryTranscript);

        mnuBarQuery.add(mnuGroupQueryScores);

        mnuGroupQueryCheckExamination.setText("Phúc khảo");

        mnuItemQueryResultCheckExamination.setText("Kết quả phúc khảo");
        mnuItemQueryResultCheckExamination.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuItemQueryResultCheckExaminationActionPerformed(evt);
            }
        });
        mnuGroupQueryCheckExamination.add(mnuItemQueryResultCheckExamination);

        mnuItemQueryListCheckExamination.setText("Danh sách phúc khảo");
        mnuItemQueryListCheckExamination.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuItemQueryListCheckExaminationActionPerformed(evt);
            }
        });
        mnuGroupQueryCheckExamination.add(mnuItemQueryListCheckExamination);

        mnuBarQuery.add(mnuGroupQueryCheckExamination);

        MenuBarMain.add(mnuBarQuery);

        mnuBarUser.setText("Người dùng");

        mnuItemResetPass.setText("Đổi mật khẩu");
        mnuItemResetPass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuItemResetPassActionPerformed(evt);
            }
        });
        mnuBarUser.add(mnuItemResetPass);

        mnuItemLogout.setText("Đăng xuất");
        mnuItemLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuItemLogoutActionPerformed(evt);
            }
        });
        mnuBarUser.add(mnuItemLogout);

        MenuBarMain.add(mnuBarUser);

        setJMenuBar(MenuBarMain);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mnuItemResetPassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuItemResetPassActionPerformed
        // TODO add your handling code here:
        frmChangePass frame = new frmChangePass();
        frame.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_mnuItemResetPassActionPerformed

    private void mnuItemImportStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuItemImportStudentActionPerformed
        try {
            JInternalFrame frmchkInternal = DesktopPaneMain.getSelectedFrame();
            if (frmchkInternal != null) {
                frmchkInternal.dispose();
            }
            frmInternalImportStudent frm = new frmInternalImportStudent();
            DesktopPaneMain.add(frm);
            frm.show();
            frm.setMaximum(true);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(frmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_mnuItemImportStudentActionPerformed

    private void mnuItemImportScheduleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuItemImportScheduleActionPerformed
        try {
            JInternalFrame frmchkInternal = DesktopPaneMain.getSelectedFrame();
            if (frmchkInternal != null) {
                frmchkInternal.dispose();
            }
            frmInternalImportSchedule frm = new frmInternalImportSchedule();
            DesktopPaneMain.add(frm);
            frm.show();
            frm.setMaximum(true);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(frmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_mnuItemImportScheduleActionPerformed

    private void mnuItemImportTranscriptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuItemImportTranscriptActionPerformed
        try {
            JInternalFrame frmchkInternal = DesktopPaneMain.getSelectedFrame();
            if (frmchkInternal != null) {
                frmchkInternal.dispose();
            }
            frmInternalImportTranscript frm = new frmInternalImportTranscript();
            DesktopPaneMain.add(frm);
            frm.show();
            frm.setMaximum(true);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(frmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_mnuItemImportTranscriptActionPerformed

    private void mnuItemClassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuItemClassActionPerformed
        try {
            JInternalFrame frmchkInternal = DesktopPaneMain.getSelectedFrame();
            if (frmchkInternal != null) {
                frmchkInternal.dispose();
            }
            frmInternalClass frm = new frmInternalClass();
            DesktopPaneMain.add(frm);
            frm.show();
            frm.setMaximum(true);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(frmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_mnuItemClassActionPerformed

    private void mnuItemScheduleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuItemScheduleActionPerformed
        try {
            JInternalFrame frmchkInternal = DesktopPaneMain.getSelectedFrame();
            if (frmchkInternal != null) {
                frmchkInternal.dispose();
            }
            frmInternalSchedule frm = new frmInternalSchedule();
            DesktopPaneMain.add(frm);
            frm.show();
            frm.setMaximum(true);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(frmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_mnuItemScheduleActionPerformed

    private void mnuItemTransciptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuItemTransciptActionPerformed
        try {
            JInternalFrame frmchkInternal = DesktopPaneMain.getSelectedFrame();
            if (frmchkInternal != null) {
                frmchkInternal.dispose();
            }
            frmInternalTranscript frm = new frmInternalTranscript();
            DesktopPaneMain.add(frm);
            frm.show();
            frm.setMaximum(true);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(frmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_mnuItemTransciptActionPerformed

    private void mnuItemSubjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuItemSubjectActionPerformed
        try {
            JInternalFrame frmchkInternal = DesktopPaneMain.getSelectedFrame();
            if (frmchkInternal != null) {
                frmchkInternal.dispose();
            }
            frmInternalSubject frm = new frmInternalSubject();
            DesktopPaneMain.add(frm);
            frm.show();
            frm.setMaximum(true);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(frmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_mnuItemSubjectActionPerformed

    private void mnuItemStudentClassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuItemStudentClassActionPerformed
        try {
            JInternalFrame frmchkInternal = DesktopPaneMain.getSelectedFrame();
            if (frmchkInternal != null) {
                frmchkInternal.dispose();
            }
            frmInternalStudentClass frm = new frmInternalStudentClass();
            DesktopPaneMain.add(frm);
            frm.show();
            frm.setMaximum(true);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(frmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_mnuItemStudentClassActionPerformed

    private void mnuItemStudentSubjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuItemStudentSubjectActionPerformed
        try {
            JInternalFrame frmchkInternal = DesktopPaneMain.getSelectedFrame();
            if (frmchkInternal != null) {
                frmchkInternal.dispose();
            }
            frmInternalStudentClassSubject frm = new frmInternalStudentClassSubject();
            DesktopPaneMain.add(frm);
            frm.show();
            frm.setMaximum(true);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(frmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_mnuItemStudentSubjectActionPerformed

    private void mnuItemUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuItemUserActionPerformed
        try {
            JInternalFrame frmchkInternal = DesktopPaneMain.getSelectedFrame();
            if (frmchkInternal != null) {
                frmchkInternal.dispose();
            }
            frmInternalUser frm = new frmInternalUser();
            DesktopPaneMain.add(frm);
            frm.show();
            frm.setMaximum(true);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(frmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_mnuItemUserActionPerformed

    private void mnuItemLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuItemLogoutActionPerformed
        this.setVisible(false);
        frmLogin frm = new frmLogin();
        frm.setVisible(true);
    }//GEN-LAST:event_mnuItemLogoutActionPerformed

    private void mnuItemCheckExaminationScheduleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuItemCheckExaminationScheduleActionPerformed
        try {
            JInternalFrame frmchkInternal = DesktopPaneMain.getSelectedFrame();
            if (frmchkInternal != null) {
                frmchkInternal.dispose();
            }
            frmInternalCheckExaminationSchedule frm = new frmInternalCheckExaminationSchedule();
            DesktopPaneMain.add(frm);
            frm.show();
            frm.setMaximum(true);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(frmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_mnuItemCheckExaminationScheduleActionPerformed

    private void mnuItemCheckExaminationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuItemCheckExaminationActionPerformed
        try {
            JInternalFrame frmchkInternal = DesktopPaneMain.getSelectedFrame();
            if (frmchkInternal != null) {
                frmchkInternal.dispose();
            }
            frmInternalCheckExamination frm = new frmInternalCheckExamination();
            DesktopPaneMain.add(frm);
            frm.show();
            frm.setMaximum(true);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(frmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_mnuItemCheckExaminationActionPerformed

    private void mnuItemQueryStudentClassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuItemQueryStudentClassActionPerformed
        try {
            JInternalFrame frmchkInternal = DesktopPaneMain.getSelectedFrame();
            if (frmchkInternal != null) {
                frmchkInternal.dispose();
            }
            frmInternalQueryStudentClass frm = new frmInternalQueryStudentClass();
            DesktopPaneMain.add(frm);
            frm.show();
            frm.setMaximum(true);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(frmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_mnuItemQueryStudentClassActionPerformed

    private void mnuItemQueryStudentClassSubjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuItemQueryStudentClassSubjectActionPerformed
        try {
            JInternalFrame frmchkInternal = DesktopPaneMain.getSelectedFrame();
            if (frmchkInternal != null) {
                frmchkInternal.dispose();
            }
            frmInternalQueryStudentClassSubject frm = new frmInternalQueryStudentClassSubject();
            DesktopPaneMain.add(frm);
            frm.show();
            frm.setMaximum(true);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(frmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_mnuItemQueryStudentClassSubjectActionPerformed

    private void mnuItemQueryScheduleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuItemQueryScheduleActionPerformed
        try {
            JInternalFrame frmchkInternal = DesktopPaneMain.getSelectedFrame();
            if (frmchkInternal != null) {
                frmchkInternal.dispose();
            }
            frmInternalQuerySchedule frm = new frmInternalQuerySchedule();
            DesktopPaneMain.add(frm);
            frm.show();
            frm.setMaximum(true);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(frmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_mnuItemQueryScheduleActionPerformed

    private void mnuItemQueryStudentScoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuItemQueryStudentScoresActionPerformed
        try {
            JInternalFrame frmchkInternal = DesktopPaneMain.getSelectedFrame();
            if (frmchkInternal != null) {
                frmchkInternal.dispose();
            }
            frmInternalQueryStudentScores frm = new frmInternalQueryStudentScores();
            DesktopPaneMain.add(frm);
            frm.show();
            frm.setMaximum(true);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(frmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_mnuItemQueryStudentScoresActionPerformed

    private void mnuItemQueryTranscriptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuItemQueryTranscriptActionPerformed
        try {
            JInternalFrame frmchkInternal = DesktopPaneMain.getSelectedFrame();
            if (frmchkInternal != null) {
                frmchkInternal.dispose();
            }
            frmInternalQueryTranscript frm = new frmInternalQueryTranscript();
            DesktopPaneMain.add(frm);
            frm.show();
            frm.setMaximum(true);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(frmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_mnuItemQueryTranscriptActionPerformed

    private void mnuItemQueryResultCheckExaminationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuItemQueryResultCheckExaminationActionPerformed
        try {
            JInternalFrame frmchkInternal = DesktopPaneMain.getSelectedFrame();
            if (frmchkInternal != null) {
                frmchkInternal.dispose();
            }
            frmInternalQueryResultCheckExamination frm = new frmInternalQueryResultCheckExamination();
            DesktopPaneMain.add(frm);
            frm.show();
            frm.setMaximum(true);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(frmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_mnuItemQueryResultCheckExaminationActionPerformed

    private void mnuItemQueryListCheckExaminationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuItemQueryListCheckExaminationActionPerformed
        try {
            JInternalFrame frmchkInternal = DesktopPaneMain.getSelectedFrame();
            if (frmchkInternal != null) {
                frmchkInternal.dispose();
            }
            frmInternalQueryListCheckExamination frm = new frmInternalQueryListCheckExamination();
            DesktopPaneMain.add(frm);
            frm.show();
            frm.setMaximum(true);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(frmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_mnuItemQueryListCheckExaminationActionPerformed

    private void mnuItemUpdateChecExaminationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuItemUpdateChecExaminationActionPerformed
        try {
            JInternalFrame frmchkInternal = DesktopPaneMain.getSelectedFrame();
            if (frmchkInternal != null) {
                frmchkInternal.dispose();
            }
            frmInternalUpdateCheckExamination frm = new frmInternalUpdateCheckExamination();
            DesktopPaneMain.add(frm);
            frm.show();
            frm.setMaximum(true);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(frmMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_mnuItemUpdateChecExaminationActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmMain().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDesktopPane DesktopPaneMain;
    private javax.swing.JMenuBar MenuBarMain;
    private javax.swing.JMenu mnuBarFunctions;
    private javax.swing.JMenu mnuBarImport;
    private javax.swing.JMenu mnuBarQuery;
    private javax.swing.JMenu mnuBarUser;
    private javax.swing.JMenu mnuGroupCheckExamination;
    private javax.swing.JMenu mnuGroupQueryCheckExamination;
    private javax.swing.JMenu mnuGroupQueryScores;
    private javax.swing.JMenu mnuGroupQueryStudent;
    private javax.swing.JMenu mnuGroupStudent;
    private javax.swing.JMenuItem mnuItemCheckExamination;
    private javax.swing.JMenuItem mnuItemCheckExaminationSchedule;
    private javax.swing.JMenuItem mnuItemClass;
    private javax.swing.JMenuItem mnuItemImportSchedule;
    private javax.swing.JMenuItem mnuItemImportStudent;
    private javax.swing.JMenuItem mnuItemImportTranscript;
    private javax.swing.JMenuItem mnuItemLogout;
    private javax.swing.JMenuItem mnuItemQueryListCheckExamination;
    private javax.swing.JMenuItem mnuItemQueryResultCheckExamination;
    private javax.swing.JMenuItem mnuItemQuerySchedule;
    private javax.swing.JMenuItem mnuItemQueryStudentClass;
    private javax.swing.JMenuItem mnuItemQueryStudentClassSubject;
    private javax.swing.JMenuItem mnuItemQueryStudentScores;
    private javax.swing.JMenuItem mnuItemQueryTranscript;
    private javax.swing.JMenuItem mnuItemResetPass;
    private javax.swing.JMenuItem mnuItemSchedule;
    private javax.swing.JMenuItem mnuItemStudentClass;
    private javax.swing.JMenuItem mnuItemStudentSubject;
    private javax.swing.JMenuItem mnuItemSubject;
    private javax.swing.JMenuItem mnuItemTranscipt;
    private javax.swing.JMenuItem mnuItemUpdateChecExamination;
    private javax.swing.JMenuItem mnuItemUser;
    // End of variables declaration//GEN-END:variables
}
